name: Publish Pre-release to PyPI

'on':
  push:
    tags:
      - 'v*.*.*a*'  # alpha versions
      - 'v*.*.*b*'  # beta versions
      - 'v*.*.*rc*' # release candidates
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write  # for OIDC when configured
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.13'
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          activate-environment: true

      - name: Build
        run: |
          rm -rf dist
          uv build

      # Try OIDC first, fallback to token if not configured
      - name: Publish to PyPI (OIDC)
        id: oidc_publish
        continue-on-error: true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true

      # Fallback to token-based auth if OIDC fails
      - name: Publish to PyPI (Token)
        if: steps.oidc_publish.outcome == 'failure'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true
          password: ${{ secrets.PYPI_API_TOKEN }}