name: CI

'on':
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # For PRs, check out the PR head exactly; for pushes, use the push SHA
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.13'
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          activate-environment: true

      - name: Install project (dev)
        run: |
          uv pip install -e .[dev]

      - name: Format check (ruff)
        run: |
          uvx ruff format --check src

      - name: Lint (ruff)
        run: |
          uvx ruff check src

      - name: Type check (basedpyright)
        run: |
          uvx basedpyright src

      - name: Tests (pytest)
        env:
          PYTHONPATH: src
        run: |
          uv run pytest -q

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.13'
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          activate-environment: true

      - name: Install docs dependencies
        run: |
          uv pip install mkdocs-material mkdocs-minify-plugin mkdocstrings[python] mike

      - name: Build docs
        run: |
          uv run mkdocs build
