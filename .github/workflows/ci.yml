name: CI

'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'release/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791  # v4.1.0
        with:
          # For PRs, check out the PR head exactly; for pushes, use the push SHA
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}

      - name: Setup uv
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4  # v6.7.0
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
          prune-cache: false

      - name: Create virtual environment
        run: uv venv

      - name: Install all dependencies
        run: uv sync --extra dev --extra docs

      # Quality gates - fail fast, ordered by speed
      - name: Format check (ruff)
        run: |
          uvx ruff format --check src

      - name: Lint (ruff)
        run: |
          uvx ruff check src

      - name: Type check (basedpyright)
        run: |
          uvx basedpyright src

      # Run tests with coverage
      - name: Run tests with coverage
        env:
          PYTHONPATH: src
        run: |
          source .venv/bin/activate
          mkdir -p reports
          uv run pytest -q -ra --maxfail=1 \
            --junitxml=reports/junit.xml \
            --cov=src --cov-report=xml \
            -n auto

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a  # v4.5.0
        with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false
          verbose: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test report (JUnit)
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097  # v4.4.2
        if: always()
        with:
          name: junit-report
          path: reports/junit.xml

      # Verify docs build (without deploying)
      - name: Build docs (verification only)
        run: |
          source .venv/bin/activate
          uv run mkdocs build --strict
